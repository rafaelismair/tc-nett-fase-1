name: CI - Build & Test .NET 8

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout do código
      uses: actions/checkout@v3

    - name: 🧰 Instalar .NET 8 Preview
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: 🧾 Verificar versão instalada
      run: dotnet --info

    - name: 🔁 Restaurar pacotes
      run: dotnet restore Fiap.CloudGames.Fase1.sln

    - name: 🛠️ Build do projeto
      run: dotnet build Fiap.CloudGames.Fase1.sln --configuration Release --no-restore

    - name: 🧪 Executar testes (Release)
      run: |
        dotnet test Fiap.CloudGames.Fase1.Tests/Fiap.CloudGames.Fase1.Tests.csproj \
          --configuration Release \
          --no-restore \
          --no-build \
          --verbosity normal
  # ──────────────────────────────────────────────────────────────
  # 2) Build + Push da imagem (apenas push na main)
  # ──────────────────────────────────────────────────────────────
  docker-deploy:
    needs: build-and-test          # só publica se o job anterior passou
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: 📥 Checkout do código
      uses: actions/checkout@v3

    - name: 🔐 Login no Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: 🛠️ Build da imagem Docker
      run: |
        docker build -t rismair/fiap-apptechchallenge:latest \
          -f Fiap.CloudGames.Fase1.API/Dockerfile .

    - name: 🚀 Push para o Docker Hub
      run: docker push rismair/fiap-apptechchallenge:latest


